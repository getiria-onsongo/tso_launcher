#!/bin/bash                             
#PBS -l nodes=1:ppn=4,mem=15gb,walltime=36:00:00
#PBS -m abe
#PBS -M sample_email@umn.edu

pwd=sample_path
script_path=scripts_location

cd $pwd

module load R

echo "Run load_sample.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < load_sample.sql

echo "create references"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_reference.sql

echo "Run  find_median.R"
R CMD BATCH find_median.R

echo "Run  create_tables_part1.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_tables_part1.sql

echo "Run normalize_coverage.R"
R CMD BATCH normalize_coverage.R

echo "Run  create_tables_part2.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_tables_part2.sql

echo "Run smooth_coverage.R"
R CMD BATCH smooth_coverage.R

echo "Run  create_tables_part3.sql "
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_tables_part3.sql

echo "Run get_three_ref.pl"
perl $script_path/get_three_ref.pl -t cnv_sample_name_tso_over_control_name_n_bowtie_bwa_ratio_gene_out -o cnv_sample_name_over_control_name -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db

echo "Run  create_tables_ref_v1.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_tables_ref_v1.sql

echo "Run create_tables_ref.R"
R CMD BATCH create_tables_ref.R

echo "Run  create_tables_ref_v2.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_tables_ref_v2.sql

echo "create coverage tables"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_coverage.sql

echo "create sample coverage"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_sample_coverage.sql

echo "create control coverage"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_control_coverage.sql

echo "create cnv_tables"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < cnv_tables.sql

echo "Run get CNV perl scripts"
perl $script_path/get_cnv_tso.pl -s cnv_sample_name_over_control_name_joint_cov -e 2 -w 3 -cmin 0.3 -cmax 0.7 -o cnv_sample_name_heterozygous_mult -t "heterozygous" -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db
perl $script_path/get_cnv_tso.pl -s cnv_sample_name_over_control_name_joint_cov_oe -e 1 -w 3 -cmin 0.3 -cmax 0.7 -o cnv_sample_name_heterozygous_mult_oe -t "heterozygous" -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db
perl $script_path/get_cnv_tso.pl -s cnv_sample_name_over_control_name_joint_control -e 0 -w 3 -cmin 0 -cmax 0.2 -o cnv_sample_name_homozygous -t "homozygous" -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db

echo "get_cnv.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < get_cnv.sql

echo "ordered_genes.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < ordered_genes.sql

echo "plot_script.pl"
perl $script_path/plot_script.pl -t cnv_sample_name_tso_over_control_name_n_bowtie_bwa_ratio_gene_out -s sample_name -c sample_name_tso_cnv -k cnv_sample_name_ordered_genes -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db -o plot_genes.R

echo "plot_genes.R"
R CMD BATCH plot_genes.R

echo "create_data.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < create_data.sql

echo "get_data.pl"
perl $script_path/get_data.pl -t sample_name_gene_list -c data_sample_name -h mysql_host -u mysql_username -p mysql_passwd -d mysql_db -o get_data.sql

echo "get_data.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < get_data.sql > raw_data.txt 

echo "get_machine_learning_data.sql"
_now=$(date +"%Y-%m-%d_%H-%M")
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < get_machine_learning_data.sql > sample_name_raw_data_$_now.txt 

echo "aggregate_window.R"
R CMD BATCH aggregate_window.R

echo "combine_data.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < combine_data.sql

echo "cnv_randomForest_predict.R"
R CMD BATCH cnv_randomForest_predict.R

echo "get_predicted.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < get_predicted.sql > sample_name_predicted_$_now.txt 

echo "output.sql"
mysql -h mysql_host -u mysql_username -pmysql_passwd mysql_db < output.sql  > sample_name_cnv_$_now.txt

sed -e s,NULL,"\t",g < sample_name_cnv_$_now.txt > sample_name_cnv_$_now.txt.bak

mv sample_name_cnv_$_now.txt.bak sample_name_cnv_$_now.txt


if [ -s sample_name_raw_data_$_now.txt ]
then
    cp  sample_name_raw_data_$_now.txt /home/thyagara/shared/cnv/data/raw_data
    chmod 664 /home/thyagara/shared/cnv/data/raw_data/sample_name_raw_data_$_now.txt
else
    echo "sample_name_raw_data_$_now.txt is empty."
    # do something as file is empty 
fi

if [ -s sample_name_predicted_$_now.txt ]
then
    cp  sample_name_predicted_$_now.txt  /home/thyagara/shared/cnv/data/predicted_data
    chmod 664 /home/thyagara/shared/cnv/data/predicted_data/sample_name_predicted_$_now.txt
else
    echo "sample_name_predicted_$_now.txt is empty"
    # do something as file is empty                                                                                                                                                                                  
fi

if [ -s sample_name_cnv_$_now.txt ]
then
    cp sample_name_cnv_$_now.txt /home/thyagara/shared/cnv/data/main_calls
    chmod 664 /home/thyagara/shared/cnv/data/main_calls/sample_name_cnv_$_now.txt
else
    echo "sample_name_predicted_$_now.txt is empty"
    # do something as file is empty                                                                                                                                                                                      
fi
